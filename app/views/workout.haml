%section
  %hgroup
    %h2 IMPORTANT NOTICE!
    %h3 DO NOT CLICK on any elements of this page with your mouse! (You can scroll to view the page.)
  %hgroup
    %p 
      As web users, we're used to using our mouse to interact with elements on a page, such as buttons, checkboxes, radio buttons, text inputs... The list goes on! But for you to be able to 
      %em test these interactions with RSpec (or another testing framework)
      we need the help of
      %strong CAPYBARA!
    %p
      Refer to the 
      %a{href: "https://devhints.io/capybara", target: "_blank"} Capybara cheat sheet 
      and 
      %strong use Capybara 
      %em (via your terminal) 
      to instruct the automated browser to click on the buttons below.
    %hr

%section
  %hgroup
    %h3 Buttons
    %h4 You can make Capybara click on these buttons by using their unique values!

  = haml :"partials/_tips", locals: { code_tip: "pry(main)> click_button 'Click me!'" }

  .grid
    %button{ id: "button-one"} Click me!
    %button{ id: "button-two"} Click on me too!
  
  %hr

%section
  %hgroup
    %h3 Radio Buttons
    %p 
      Input elements can also be selected by their 'name' attributes:
      %span{class: 'outer-highlight'}
        :escaped
          <input type='checkbox' 
        %span{class: 'inner-highlight'}
          :escaped
            name='first'
        >

  = haml :"partials/_tips", locals: { code_tip: "pry(main)> check('first')" }

  %fieldset
    %label{:for => "first"}
      %input#terms{:name => "first", :type => "checkbox"}/
      Check me!
    %label{:for => "second"}
      %input#terms_sharing{:name => "second", :type => "checkbox"}/
      And me!

  %hr

%section.identicals.definition-row
  %h3 Buttons: identical values
  %p Try to click these buttons by their values. What error do you get? Look at using Capybara's `within` syntax
  .third.centered-row
    %h5
      :escaped
        <section class='third'>
    .button-row
      .centered-row
        %button.celebrate.button--horizontal We're the same...but in different sections
    %h5
      :escaped
        </section>
  %hr
  .fourth.centered-row
    %h5
      :escaped
        <section class='fourth'>
    .button-row
      .centered-row
        %button.celebrate.button--horizontal We're the same...but in different sections
    %h5
      :escaped
        </section>
  = haml :"partials/_tips", locals: { code_tip: "pry(main)> within('section .fourth') do\n             click_button \"We're the same...but in different sections\"\n           end" }
%hr

%section.identicals.definition-row
  %h3 Buttons: different IDs
  %p  These buttons should be targetted by their IDs. Hint: this is easier than you think.
  %h5
    :escaped
      <button id='left'>
  .fifth.centered-row
    .button-row
      %button.celebrate.button--horizontal{ id: 'left' } We're the same but we have different IDs
      %button.celebrate.button--horizontal{ id: 'right'} We're the same but we have different IDs
  = haml :"partials/_tips", locals: { code_tip: "pry(main)> click_button \"We're the same but we have different IDs\"" }
%hr

%section.identicals.definition-row
  %h3 Buttons: different classes
  %p These buttons should be targetted by their classes.
  %h5
    :escaped
      <button class='left'>
  .sixth.centered-row
    .button-row
      %button{ class: 'left'    }  We're the same but we have different classes
      %button{ class: 'right' }  We're the same but we have different classes
  = haml :"partials/_tips", locals: { code_tip: "pry(main)> find('button.left').click" }
%hr

%section.definition-row.centered-row
  %h3 Forms
  %p Try to fill in this form!
  = haml :"partials/_tips", locals: { code_tip: "pry(main)> fill_in 'name', with: 'Bob'" }
  %section
    .container
      %section.madlibs.form-row
        %form{ method: 'POST', action: '/madlibs' }
          %fieldset
            %ul
              - [:name, :age, :gender, :hometown, :'favourite beverage'].each do |input_label|
                %li
                  %label{ for: input_label.to_s } #{input_label.to_s}
                  %input{ type: 'text', name: input_label.to_s }
            .centered-row
              %input{ type: 'submit', value: "Submit" }
